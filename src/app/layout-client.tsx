"use client";

import { Provider } from "react-redux";
import { AuthProvider } from "./providers";
import { ToastContainer } from "react-toastify";
import { GlobalContextProvider } from "./globalContext/store";
import store from "@/store/store";
import { useEffect, useRef } from "react";

export default function LayoutClientComponent({
  children,
}: {
  children: React.ReactNode;
}) {
  // useEffect(() => {
  //   const handleWindowClose = (event) => {
  //     // Check if a flag in sessionStorage exists
  //     const isReloading = sessionStorage.getItem("isReloading");

  //     if (!isReloading) {
  //       console.log("s[s[s[s[s[s[s[s[s[slslslslslslslslslsslsls",)

  //       // Set a flag in sessionStorage to track page reload
  //       sessionStorage.setItem("isReloading", "true");
  //     } else {
  //       // Clear the flag if it exists (page is being reloaded)
  //       sessionStorage.removeItem("isReloading");
  //     }
  //   };

  //   window.addEventListener("beforeunload", handleWindowClose);

  //   return () => {
  //     window.removeEventListener("beforeunload", handleWindowClose);
  //   };
  // }, []);
  return (
    <AuthProvider>
      <GlobalContextProvider>
        <Provider store={store}>
          {children}
          <ToastContainer />
        </Provider>
      </GlobalContextProvider>
    </AuthProvider>
  );
}

// "use client";

// import "./globals.css";
// import type { Metadata } from "next";
// import { Inter } from "next/font/google";
// import { GlobalContextProvider } from "./globalContext/store";
// import "react-toastify/dist/ReactToastify.css";
// import { ToastContainer } from "react-toastify";
// import { AuthProvider } from "./providers";
// import { Provider } from "react-redux";
// import store from "@/store/store";

// const inter = Inter({ subsets: ["latin"] });

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

// export default function RootLayout({
//   children,
// }: {
//   children: React.ReactNode;
// }) {
//   return (
//     <html lang="en">
//       <body
//         className={`${inter.className} bg-slate-100 text-slate-800 container mx-auto p-4`}
//       >
//         <AuthProvider>
//           <GlobalContextProvider>
//             <Provider store={store}>
//               {children}
//               <ToastContainer />
//             </Provider>
//           </GlobalContextProvider>
//         </AuthProvider>
//       </body>
//     </html>
//   );
// }
